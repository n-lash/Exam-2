(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var header = document.getElementById('header');
var burger = document.getElementById('headerBurger');
var mobileMenu = document.getElementById('mobileMenu');
var navList = document.getElementById('navList');
var accordion = UIkit.accordion('.faqs-accordion', {// active: 1,
  // collapsible: false,
}); // const slideShow = UIkit.slideshow('.testimonials-slider', {
// animation: fade,
// min-height: 96,
// });

document.addEventListener('scroll', function () {
  if (window.pageYOffset > header.clientHeight) {
    header.classList.add('bg-grey');
  } else {
    header.classList.remove('bg-grey');
  }
});
burger.addEventListener('click', function () {
  mobileMenu.classList.toggle('active');
});
navList.addEventListener('click', function (ev) {
  var items = document.querySelectorAll('.header-nav__link');
  Array.from(items).forEach(function (item) {
    item.classList.remove('selected');
  });
  ev.target.classList.add('selected');
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
